@startuml
class MasterMind
class PlayMasterMind {
 - continueDialog : InitYesNoDialog
 - game : InitGame
}
class InitYesNoDialog {
 - question : String
 - answer : String
 
 - isNegative() : boolean
 + read() : void
 + isAffirmative() : boolean
}

class InitGame {
 - ALLOWED_COLORS : ["r", "g", "b", "y", "c", "m"]
 - COMBINATIONS_LENGTH : 4
 + play() : void
}
class InitBoard {
 - TITLE : "MASTERMIND"
 - MAXIMUN_ATTEMPTS : 10
 - attempts : Number
 
 + showTitle() : void
 + showAttempts() : void
 + getAttempts() : attempts
 + getMaximunAttempts() : MAXIMUN_ATTEMPTS
 + increaseAttemptsByOne() : void
 + showWinningMessage() : void
 + showLosingMessage() : void
 
}

class InitSecretCombinationCreator {
 - secretCombination : String
 - WELL_POSITIONED : "b"
 - POORLY_POSITIONED : "W"
 - EMPTY : "e"
 - isCorrectCombination : false
 - resultsOfComparingCombinations : String[]
 
 - isRepeatedColor(String color, String secretCombination) : boolean
 - isWellPositioned(String proposedColor, String secretColor) : boolean
 - isPoorlyPositioned(String colorToVerify, String secretCombination) : boolean
 - addToSecretCombination(String color) : void
 - getWellPositioned() : WELL_POSITIONED
 - getPoorlyPositioned() : POORLY_POSITIONED
 - getEmpty() : EMPTY
 - addResultsOfComparingCombinations(String comparisonResult) : void
 - setIsCorrectCombination(Boolean value) : void
 - setCombinationWithoutRepeatedColors(Number combinationsLength, String[] allowedColors) : void
 + getSecretCombination() : secretCombination
 + compare(String combination) : void
 + showComparisonResult() : void
 + getResultsOfComparingCombination() : resultsOfComparingCombinations
 + verifyCorrectCombination() : boolean
 + isCorrectCombination() : correctCombination
}
class InitDecipher {
 - proposedCombinations : String[]
 
 - isValidCombination(String proposedCombination, Board board) : boolean
 - areValidColors(String proposedCombination, String[] allowedColors) : boolean
 - isAllowed(String color, String[] allowedColors) : boolean
 - thereAreRepeatedColors(String proposedCombination) : boolean
 - addProposedCombination(String combination) : void
 + proposeAValidCombination(Board board) : void
 + getProposedCombinations() : proposedCombinations
}

MasterMind *-- PlayMasterMind

PlayMasterMind --> InitYesNoDialog
PlayMasterMind --> InitGame

InitGame *-- InitBoard
InitGame *-- InitSecretCombinationCreator
InitGame *-- InitDecipher

note left of InitSecretCombinationCreator::compare
 Check
end note
note left of InitSecretCombinationCreator::getResultsOfComparingCombination
 Check
end note
note left of InitSecretCombinationCreator::verifyCorrectCombination
 Check
end note
note left of InitDecipher::getProposedCombinations
 Cambiar por getProposedCombinationCurrently(attempt) : String
end note
note left of InitSecretCombinationCreator::correctCombination
 Cambiar por "es decifrada"
end note
@enduml