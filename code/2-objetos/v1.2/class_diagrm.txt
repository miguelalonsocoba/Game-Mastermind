  @startuml
  title Modular Design
  class MasterMind {
   - continueDialog : YesNoDialog
   
   + play() : void
  }
  class YesNoDialog {
   - question : String
   - answer : String
   
   - isNegative() : boolean
   + read() : void
   + isAffirmative() : boolean
  }
  
  class Game {
   - ALLOWED_COLORS : ["r", "g", "b", "y", "c", "m"]
   - COMBINATIONS_LENGTH : 4
   - TITLE : "MASTERMIND"
   - MAXIMUN_ATTEMPTS : 10
   - attempts : Number
   - result : InitResult
   - secretCombinationCreator : InitSecretCombinationCreator
   - decipher : InitDecipher
   
   - showTitle() : void
   - showAttempts() : void
   - increaseAttemptsByOne() : void
   - thereAreAttempts() : boolean
   + play() : void
  }
  class Result {
   - resultsOfComparingCombinations : String[]
   - isCorrectCombination : boolean
   - WELL_POSITIONED : b
  
   + showWinningMessage() : void
   + showLosingMessage() : void
   + addResutlsOfCompaingCombinations(String resultOfComparing) : void
   + showComparisonResult(String[] proposedCombinations) : void
   + verifyCorrectCombination() : void
   + isCorrectCombination() : isCorrectCombination
  }
  
  class SecretCombinationCreator {
   - secretCombination : String
   - WELL_POSITIONED : "b"
   - POORLY_POSITIONED : "W"
   - EMPTY : "e"
   - combinationsLength : Number
   - allowedColors : String[]
   
   - isRepeatedColor(String color, String secretCombination) : boolean
   - isWellPositioned(String proposedColor, String secretColor) : boolean
   - isPoorlyPositioned(String colorToVerify, String secretCombination) : boolean
   - setCombinationWithoutRepeatedColors(Number combinationsLength, String[] allowedColors) : void
   + compare(String combination) : String
  }
  class Decipher {
   - proposedCombinations : String[]
   
   - isValidCombination(String combination, combinationsLength, allowedColors) : boolean
   - areValidColors(String combination, String[] allowedColors) : boolean
   - isAllowed(String color, String[] allowedColors) : boolean
   - thereAreRepeatedColors(String combination) : boolean
   - addProposedCombination(String combination) : void
   + proposeAValidCombination(Game game) : void
   + getProposedCombinations() : proposedCombinations
  }
  
  MasterMind *-- YesNoDialog
  MasterMind *-- Game
  
  Game *-- Result
  Game *-- SecretCombinationCreator
  Game *-- Decipher
  
  Result o-- "0-10" SecretCombinationCreator : "Results compare"
  Result ..> Decipher : "Show proposed combinations"
  
  SecretCombinationCreator ..> Decipher : "Proposed combinations"
  
  @enduml