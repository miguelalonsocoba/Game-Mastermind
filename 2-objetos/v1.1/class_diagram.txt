  @startuml
  class MasterMind
  class PlayMasterMind {
   - continueDialog : InitYesNoDialog
   - game : InitGame
  }
  class InitYesNoDialog {
   - question : String
   - answer : String
   
   - isNegative() : boolean
   + read() : void
   + isAffirmative() : boolean
  }
  
  class InitGame {
   - ALLOWED_COLORS : ["r", "g", "b", "y", "c", "m"]
   - COMBINATIONS_LENGTH : 4
   - TITLE : "MASTERMIND"
   - MAXIMUN_ATTEMPTS : 10
   - attempts : Number
   
   - showTitle() : void
   - showAttempts() : void
   - getAttempts() : attempts
   - getMaximunAttempts() : MAXIMUN_ATTEMPTS
   - increaseAttemptsByOne() : void
   - getCombinationsLength() : Number COMBINATIONS_LENGTH
   - getAllowedColors() : String[] ALLOWED_COLORS
   + play() : void
  }
  class InitResult {
   - resultsOfComparingCombinations : String[]
  
   + showWinningMessage() : void
   + showLosingMessage() : void
   + addResutlsOfCompaingCombinations(String resultOfComparing) : void
   + showComparisonResult(String[] proposedCombinations) : void
   + getResultsOfComparingCombination() : resultsOfComparingCombinations
  }
  
  class InitSecretCombinationCreator {
   - secretCombination : String
   - WELL_POSITIONED : "b"
   - POORLY_POSITIONED : "W"
   - EMPTY : "e"
   - isCorrectCombination : false
   
   - isRepeatedColor(String color, String secretCombination) : boolean
   - isWellPositioned(String proposedColor, String secretColor) : boolean
   - isPoorlyPositioned(String colorToVerify, String secretCombination) : boolean
   - addToSecretCombination(String color) : void
   - getWellPositioned() : WELL_POSITIONED
   - getPoorlyPositioned() : POORLY_POSITIONED
   - getEmpty() : EMPTY
   - setIsCorrectCombination(Boolean value) : void
   - setCombinationWithoutRepeatedColors(Number combinationsLength, String[] allowedColors) : void
   + getSecretCombination() : secretCombination
   + compare(String combination) : String
   + verifyCorrectCombination(String resultOfComparingCombination) : boolean
   + isCorrectCombination() : correctCombination
  }
  class InitDecipher {
   - proposedCombinations : String[]
   
   - isValidCombination(String combination, String[] allowedColors, Number combinationsLength) : boolean
   - areValidColors(String combination, String[] allowedColors) : boolean
   - isAllowed(String color, String[] allowedColors) : boolean
   - thereAreRepeatedColors(String combination) : boolean
   - addProposedCombination(String combination) : void
   + proposeAValidCombination(String[] allowedColors, Number combinationsLength) : void
   + getProposedCombinations() : proposedCombinations
   + getProposedCombinationCurrently(Number currently) : String proposedCombinationCurrently
  }
  
  MasterMind *-- PlayMasterMind
  
  PlayMasterMind --> InitYesNoDialog
  PlayMasterMind --> InitGame
  
  InitGame *-- InitResult
  InitGame *-- InitSecretCombinationCreator
  InitGame *-- InitDecipher
  
  InitResult o-- "0-10" InitSecretCombinationCreator : "Results compare"
  InitResult ..> InitDecipher : "Show proposed combinations"
  
  InitSecretCombinationCreator ..> InitDecipher : "Proposed combinations"
  InitSecretCombinationCreator ..> InitResult : "Result
  
  @enduml